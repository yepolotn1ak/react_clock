{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","toUTCString","slice","timerId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","handleContextMenu","event","preventDefault","handleDocumentClick","updateClockName","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAeO,IAAMA,EAAb,4MACEC,MAAe,CACbC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAFtD,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAER,aAZb,IAAIC,MAAOC,cAAcC,OAAO,IAAK,KAaxCM,QAAQC,KAAK,EAAKX,MAAMC,eACvB,OAXP,gCAcE,SAAmBW,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WACrCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDP,KAAKQ,MAAMD,cAhBzE,kCAoBE,WACEN,OAAOS,cAAcV,KAAKD,WArB9B,oBAwBE,WACE,IAAQQ,EAAcP,KAAKQ,MAAnBD,UACAZ,EAAgBK,KAAKN,MAArBC,YAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,WArCX,GAA2BiB,IAAMC,WCLjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWnB,OAAO,GAE3C,MAAM,SAAN,OAAgBiB,GAGX,IAAMG,EAAb,4MACExB,MAAe,CACba,UAAW,UACXY,UAAU,GAHd,EAMEpB,QAAU,EANZ,EAoBEqB,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKnB,SAAS,CAAEgB,UAAU,KAtB9B,EAyBEI,oBAAsB,WACpB,EAAKpB,SAAS,CAAEgB,UAAU,KA1B9B,EA6BEK,gBAAkB,WAChB,EAAKrB,SAAS,CAAEI,UAAWO,OA9B/B,uDAQE,WACEd,KAAKD,QAAUE,OAAOC,YAAYF,KAAKwB,gBAAiB,MACxDC,SAASC,iBAAiB,cAAe1B,KAAKoB,mBAC9CK,SAASC,iBAAiB,QAAS1B,KAAKuB,uBAX5C,kCAcE,WACEtB,OAAOS,cAAcV,KAAKD,SAC1B0B,SAASE,oBAAoB,cAAe3B,KAAKoB,mBACjDK,SAASE,oBAAoB,QAAS3B,KAAKuB,uBAjB/C,oBAiCE,WACE,MAAgCvB,KAAKN,MAA7ByB,EAAR,EAAQA,SAAUZ,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WAxCvC,GAAyBK,IAAMC,WCb/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.0844295e.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  currentTime: string;\n};\n\nfunction getNewDate(): string {\n  return new Date().toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    currentTime: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ currentTime: getNewDate() });\n      console.info(this.state.currentTime);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(this.updateClockName, 3300);\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleDocumentClick);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleDocumentClick);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleDocumentClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  updateClockName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}